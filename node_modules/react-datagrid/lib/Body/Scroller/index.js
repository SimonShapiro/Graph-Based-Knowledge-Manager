'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactClass = require('react-class');

var _reactClass2 = _interopRequireDefault(_reactClass);

var _join = require('src/utils/join');

var _join2 = _interopRequireDefault(_join);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _reactFlex = require('react-flex');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Scroller = function (_Component) {
  _inherits(Scroller, _Component);

  function Scroller() {
    _classCallCheck(this, Scroller);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Scroller).apply(this, arguments));
  }

  _createClass(Scroller, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var props = this.props;

      var className = 'react-datagrid__scroller';
      var scrollerProps = {
        className: className,
        style: {
          height: props.totalHeight,
          overflow: 'auto'
        }
      };

      var itemHeight = props.itemHeight;
      var dataLength = props.dataLength;
      var contentHeight = props.contentHeight;

      var contentClassName = (0, _join2.default)('react-datagrid__scroller__content');
      var contentProps = {
        className: contentClassName,
        style: {
          height: contentHeight
        }
      };

      return _react2.default.createElement(
        'div',
        _extends({
          style: { position: 'relative' }
        }, scrollerProps, {
          ref: 'viewport',
          onScroll: function onScroll(e) {
            return _this2.props.onScroll(e.target.scrollTop, e);
          }
        }),
        _react2.default.createElement(
          _reactFlex.Flex,
          _extends({ wrap: false, row: true, alignItems: 'stretch' }, contentProps),
          props.children
        )
      );
    }
  }]);

  return Scroller;
}(_reactClass2.default);

Scroller.propTypes = {
  className: _react.PropTypes.string,
  scrollTop: _react.PropTypes.number
};

exports.default = Scroller;